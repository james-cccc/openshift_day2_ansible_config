---

- name: Setup ETCD backup job
  block:

    - name: Get etcd image and tag
      community.kubernetes.k8s_info:
        api_version: v1
        kind: Pod
        namespace: openshift-etcd
      register: etcd_image_tag

    - name: Display etcd image and tag
      debug:
        msg: "{{ etcd_image_tag.resources[0].spec.containers[0].image }}"

    - name: Create Service Account approver
      community.kubernetes.k8s:
        state: present
        kind: ServiceAccount
        namespace: openshift-config
        name: etcd-backup

    - name: Create Cluster Role with SCC updates for Service Account
      community.kubernetes.k8s:
        state: present
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: use-privileged-scc-role
        merge_type:
          - strategic-merge
          - merge
        definition:
          rules:
          - apiGroups:
            - security.openshift.io
            resourceNames:
            - privileged
            resources:
            - securitycontextconstraints
            verbs:
            - use

    - name: Bind use-privileged-scc-role role to the approver Service Account
      community.kubernetes.k8s:
        state: present
        api_version: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        name: use-privileged-scc-rolebinding
        namespace: openshift-config
        merge_type:
          - strategic-merge
          - merge
        definition:
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: use-privileged-scc-role
          subjects:
          - kind: ServiceAccount
            name: etcd-backup
            namespace: openshift-config

    - name: Create ETCD PVC
      community.kubernetes.k8s:
        state: present
        kind: PersistentVolumeClaim
        api_version: v1
        name: etcd-backup
        namespace: openshift-config
        merge_type:
          - strategic-merge
          - merge
        definition:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
            storageClassName: gp2
            volumeMode: Filesystem

    - name: Create ETCD Backup ConfigMap
      community.kubernetes.k8s:
        state: present
        kind: ConfigMap
        api_version: v1
        definition:
          metadata:
            name: etcd-backup-script
            namespace: openshift-config
          data:
            etcd-backup.sh: |
              #!/bin/bash

              DATE=$(date +%Y%m%dT%H%M%S)
              PATH=$PATH:/usr/bin/oc

              cp /usr/local/bin/cluster-backup.sh /tmp/
              ls -l /tmp/
              sed 's|dl_etcdctl|#dl_etcdctl|g' -i /tmp/cluster-backup.sh
              /tmp/cluster-backup.sh /assets/backup
              if [ $? -eq 0 ]; then
                  mkdir /etcd-backup/${DATE}
                  cp -r /assets/backup/*  /etcd-backup/${DATE}/
                  echo 'Copied backup files to PVC mount point.'
                  echo ' Getting AWS CLI...'
                  #curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                  #rm -fr /var/cache/yum/*
                  #yum clean all
                  #yum install unzip -y
                  #unzip awscliv2.zip
                  #./aws/install
                  pip3 install awscli --upgrade
                  aws --version
                  aws s3 cp /etcd-backup/${DATE} s3://pgi-ocpbackup-dev/${DATE}/ --recursive --acl bucket-owner-full-control --sse AES256
                  exit 0
              fi

              echo "Backup attempts failed. Please FIX !!!"
              exit 1

    - name: Create ETCD Backup CronJob
      community.kubernetes.k8s:
        state: present
        kind: CronJob
        api_version: batch/v1beta1
        definition:
          metadata:
            name: cronjob-etcd-backup
            namespace: openshift-config
            labels:
              purpose: etcd-backup
          spec:
            schedule: '15 01 * * *'
            startingDeadlineSeconds: 200
            concurrencyPolicy: Forbid
            suspend: false
            jobTemplate:
              spec:
                backoffLimit: 0
                template:
                  spec:
                    nodeSelector:
                      node-role.kubernetes.io/master: ''
                    restartPolicy: Never
                    activeDeadlineSeconds: 200
                    serviceAccountName: etcd-backup
                    hostNetwork: true
                    containers:
                      - resources:
                          requests:
                            cpu: 300m
                            memory: 250Mi
                        terminationMessagePath: /dev/termination-log
                        name: etcd-backup
                        command:
                          - /bin/sh
                          - '-c'
                          - >-
                            /root/etcd-backup.sh && ls -1 /etcd-backup/* | sort -r | tail -n +6 | xargs rm -rf > /dev/null 2>&1
                        securityContext:
                          privileged: true
                        imagePullPolicy: IfNotPresent
                        volumeMounts:
                          - name: certs
                            mountPath: /etc/ssl/etcd/
                          - name: conf
                            mountPath: /etc/etcd/
                          - name: kubeconfig
                            mountPath: /etc/kubernetes/
                          - name: etcd-backup-script
                            mountPath: /root/etcd-backup.sh
                            subPath: etcd-backup.sh
                          - name: etcd-backup
                            mountPath: /etcd-backup
                          - name: scripts
                            mountPath: /usr/local/bin
                          - name: oc
                            mountPath: /usr/bin/oc
                        terminationMessagePolicy: FallbackToLogsOnError
                        image: "{{ etcd_image_tag.resources[0].spec.containers[0].image }}"
                    serviceAccount: etcd-backup
                    tolerations:
                      - operator: Exists
                        effect: NoSchedule
                      - operator: Exists
                        effect: NoExecute
                    volumes:
                      - name: certs
                        hostPath:
                          path: /etc/kubernetes/static-pod-resources/etcd-member
                          type: ''
                      - name: conf
                        hostPath:
                          path: /etc/etcd
                          type: ''
                      - name: kubeconfig
                        hostPath:
                          path: /etc/kubernetes
                          type: ''
                      - name: scripts
                        hostPath:
                          path: /usr/local/bin
                          type: ''
                      - name: oc
                        hostPath:
                          path: /usr/bin/oc
                          type: ''
                      - name: etcd-backup
                        persistentVolumeClaim:
                          claimName: etcd-backup
                      - name: etcd-backup-script
                        configMap:
                          name: etcd-backup-script
                          defaultMode: 493
