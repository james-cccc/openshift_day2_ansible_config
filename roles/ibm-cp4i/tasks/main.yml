---

- name: Apply the Opencloud-operators catalogSource yaml
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        name: opencloud-operators
        namespace: openshift-marketplace
      spec:
        displayName: IBMCS Operators
        publisher: IBM
        sourceType: grpc
        image: docker.io/ibmcom/ibm-common-service-catalog:latest
        updateStrategy:
          registryPoll:
            interval: 45m

- name: Apply ibm-operator-catalog catalogSource yaml
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        name: ibm-operator-catalog
        namespace: openshift-marketplace
      spec:
        displayName: ibm-operator-catalog
        publisher: IBM Content
        sourceType: grpc
        image: icr.io/cpopen/ibm-operator-catalog:latest
        updateStrategy:
          registryPoll:
            interval: 45m

- name: Ensure the cp4i namespaces exist
  community.kubernetes.k8s:
    state: present
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
  loop: "{{ cp4i_namespaces }}"

- name: Create IBM Entitlement Docker Registry Secret
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      data:
        .dockerconfigjson: "{{ ibm_docker_config_json }}"
      kind: Secret
      metadata:
        name: ibm-entitlement-key
        namespace: "{{ item }}"
      type: kubernetes.io/dockerconfigjson
  loop: "{{ cp4i_namespaces }}"

# Install CP4I
- name: Install the Top-Level cp4i Operator
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: ibm-cp-integration
        namespace: openshift-operators
      spec:
        channel: "{{ cp4i_channel }}"
        name: ibm-cp-integration
        source: ibm-operator-catalog
        sourceNamespace: openshift-marketplace

# Wait for the CSVs to be succeeded
- name: Wait for the Platform Navigator Operator to have plumbed in the PlatformNavigator CRD
  community.kubernetes.k8s_info:
    name: platformnavigators.integration.ibm.com
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
  register: pn_crd_status
  until:
    - pn_crd_status.resources
    - pn_crd_status.resources[0].status
  retries: 100
  delay: 20

- name: Create a Platform Navigator Instance
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: integration.ibm.com/v1beta1
      kind: PlatformNavigator
      metadata:
        name: int-nav
        namespace: cp-navigator
      spec:
        license:
          accept: true
          license: "{{ platnav_licence }}"
        mqDashboard: true
        replicas: "{{ platnav_replicas }}"
        storage:
          class: "{{ platnav_storage_class }}"
        version: "{{ platnav_version }}"

#########################################################################################################      
# WORKAROUND:  Check for the status of the Certificate Manager Operator - And re-install if not successful 
- name:  Wait for Certificate Manager Subscription to be created
  community.kubernetes.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: ibm-cert-manager-operator
    namespace: ibm-common-services
  register: cm_sub
  until: 
    - cm_sub.resources[0].status.installedCSV is defined
  retries: 30
  delay: 60

- name: Show Certificate Manager Operator Version
  debug:
    msg: 
      - "Certificate Manager Operator: {{ cm_sub.resources[0].status.installedCSV }}"

- name:  Get State of Cert Manager Operator 
  community.kubernetes.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ cm_sub.resources[0].status.installedCSV }}"
    namespace: ibm-common-services
  register: cm
  until: 
    - cm.resources[0].status.phase is defined
    - cm.resources[0].status.phase == "Succeeded"
  retries: 20
  delay: 5
  ignore_errors: "{{ continue_on_error }}"
    
- name: Remove Cert Manager Operator
  community.kubernetes.k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ cm_sub.resources[0].status.installedCSV }}"
    namespace: ibm-common-services
  when:
    - cm.resources[0].status.phase != "Succeeded"

- name: Remove Cert Manager Subscription
  community.kubernetes.k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: ibm-cert-manager-operator
    namespace: ibm-common-services
  when:
    - cm.resources[0].status.phase != "Succeeded"      
 
#Operator will automatically re-install, the script will fail if operator fails to complete for 2nd time
- name:  Wait for Cert Manager Operator to be ready  
  community.kubernetes.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ cm_sub.resources[0].status.installedCSV }}"
    namespace: ibm-common-services
  register: cm
  until: 
    - cm.resources[0].status.phase is defined
    - cm.resources[0].status.phase == "Succeeded"
  retries: 20
  delay: 5      
########################################################################################################

#########################################################################################################      
# WORKAROUND:  Check for the status of the Namespacescope Operator - And re-install if not successful 
- name:  Wait for NamespaceScope Subscription to be created
  community.kubernetes.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: ibm-namespace-scope-operator
    namespace: ibm-common-services
  register: nss_sub
  until: 
    - nss_sub.resources[0].status.installedCSV is defined
  retries: 30
  delay: 60

- name: Show NamespaceScope Operator Version
  debug:
    msg: 
      - "NamespaceScope Operator: {{ nss_sub.resources[0].status.installedCSV }}"

- name:  Get State of NamespaceScope Operator 
  community.kubernetes.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ nss_sub.resources[0].status.installedCSV }}"
    namespace: ibm-common-services
  register: nss
  until: 
    - nss.resources[0].status.phase is defined
    - nss.resources[0].status.phase == "Succeeded"
  retries: 10
  delay: 5
  ignore_errors: "{{ continue_on_error }}"
    
- name: Remove NamespaceScope Operator
  community.kubernetes.k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ nss_sub.resources[0].status.installedCSV }}"
    namespace: ibm-common-services
  when:
    - nss.resources[0].status.phase != "Succeeded"
- name: Remove NamespaceScope Subscription
  community.kubernetes.k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: ibm-namespace-scope-operator
    namespace: ibm-common-services
  when:
    - nss.resources[0].status.phase != "Succeeded"      
 
- name:  Recreate NamespaceScope Operator 
  community.kubernetes.k8s:
    state: present
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    merge_type:
      - strategic-merge
      - merge
    definition:
      metadata:
        labels:
          operators.coreos.com/ibm-namespace-scope-operator.ibm-common-services: ""
        name: ibm-namespace-scope-operator
        namespace: ibm-common-services
      spec:
        channel: "{{ nss_sub.resources[0].spec.channel }}"
        installPlanApproval: Automatic
        name: ibm-namespace-scope-operator
        source: ibm-operator-catalog
        sourceNamespace: openshift-marketplace
        startingCSV: "{{ nss_sub.resources[0].status.installedCSV }}"
  when:
    - nss.resources[0].status.phase != "Succeeded"      
                                                    
#Check state of NamespaceScope Operator, the script will fail if operator fails to complete for 2nd time
- name:  Get State of NamespaceScope Operator 
  community.kubernetes.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ nss_sub.resources[0].status.installedCSV }}"
    namespace: ibm-common-services
  register: nss
  until: 
    - nss.resources[0].status.phase is defined
    - nss.resources[0].status.phase == "Succeeded"
  retries: 20
  delay: 5
########################################################################################################                                                                            

- name:  Wait for Platform Navigator Object to be ready
  community.kubernetes.k8s_info:
    api_version: integration.ibm.com/v1beta1
    kind: PlatformNavigator
    name: int-nav
    namespace: cp-navigator
  register: pn
  until: 
    - pn.resources[0].status.conditions[0].type is defined
    - pn.resources[0].status.conditions[0].reason == "Deployed"
    - pn.resources[0].status.conditions[0].type == "Ready"
  retries: 40
  delay: 60
